<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>gov.fda.nctr</groupId>
  <artifactId>rxnorm-explorer</artifactId>
  <version>0.1.0-${revision}</version>
  <packaging>jar</packaging>
  <name>rxnorm-explorer</name>
  <description>RxNorm Explorer Web Application</description>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.5.0</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>
  <properties>
    <java.release>11</java.release>
    <nodejs.version>v14.16.1</nodejs.version>
    <checkerFrameworkVersion>3.33.1-SNAPSHOT</checkerFrameworkVersion>
    <pg.driver.version>42.2.20</pg.driver.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <revision>SNAPSHOT</revision>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-json</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jdbc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-tomcat</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency> <!-- Generates META-INF/spring.components to make finding Spring components quicker. -->
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-indexer</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>1</version>
    </dependency>
    <dependency>
      <groupId>org.hobsoft.spring</groupId>
      <artifactId>spring-rest-template-logger</artifactId>
      <version>2.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.5.13</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.9.0</version>
    </dependency>
    <dependency>
      <groupId>commons-net</groupId>
      <artifactId>commons-net</artifactId>
      <version>3.8.0</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>com.jayway.jsonpath</groupId>
      <artifactId>json-path</artifactId>
      <version>2.4.0</version>
    </dependency>
    <dependency>
      <groupId>org.checkerframework</groupId>
      <artifactId>checker-qual</artifactId>
      <version>3.30.1-SNAPSHOT</version>
    </dependency>
    <dependency> <!-- Included to silence missing enum warning related to nullable annotation. -->
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <version>3.0.2</version>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${pg.driver.version}</version>
    </dependency>
  </dependencies>
  <build>
    <finalName>rxnx</finalName>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <!-- Java compiler -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <fork>true</fork>
          <release>${java.release}</release>
          <compilerArguments>
            <Xmaxerrs>10000</Xmaxerrs>
            <Xmaxwarns>10000</Xmaxwarns>
          </compilerArguments>
          <showWarnings>true</showWarnings>
          <annotationProcessorPaths>
            <path>
              <groupId>org.checkerframework</groupId>
              <artifactId>checker</artifactId>
              <version>${checkerFrameworkVersion}</version>
            </path>
          </annotationProcessorPaths>
          <annotationProcessors>
            <annotationProcessor>org.checkerframework.checker.nullness.NullnessChecker</annotationProcessor>
          </annotationProcessors>
          <compilerArgs>
            <arg>-parameters</arg>
            <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
            <arg>-Ainfer=ajava</arg> 
            <arg>-Awarns</arg> 
            <arg>-Aajava=/tmp/WPITEMP-RxNorm/</arg>
            <arg>-AcheckPurityAnnotations</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <!-- Generate client-side type definitions (Typescript) from web services dto classes (Java).
           https://github.com/vojtechhabarta/typescript-generator -->
      <plugin>
        <groupId>cz.habarta.typescript-generator</groupId>
        <artifactId>typescript-generator-maven-plugin</artifactId>
        <version>2.19.577</version>
        <executions>
          <execution>
            <id>generate</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <phase>process-classes</phase>
          </execution>
        </executions>
        <configuration>
          <jsonLibrary>jackson2</jsonLibrary>
          <classPatterns>
            <classPattern>gov.fda.nctr.models.dto.**</classPattern>
          </classPatterns>
          <excludeClassPatterns>
            <excludeClassPattern>**.*Exception</excludeClassPattern>
          </excludeClassPatterns>
          <nullableAnnotations>
            <nullableAnnotation>org.checkerframework.checker.nullness.qual.Nullable</nullableAnnotation>
          </nullableAnnotations>
          <nullabilityDefinition>nullAndUndefinedUnion</nullabilityDefinition>
          <customTypeMappings>
            <mapping>java.time.LocalDate:string</mapping>
            <mapping>java.time.Instant:string</mapping>
            <mapping>java.time.OffsetDateTime:string</mapping>
            <mapping>com.fasterxml.jackson.databind.node.ObjectNode:Object</mapping>
            <mapping>com.fasterxml.jackson.databind.JsonNode:any|null</mapping>
          </customTypeMappings>
          <outputKind>module</outputKind>
          <outputFileType>implementationFile</outputFileType>
          <outputFile>client/src/generated/dto.ts</outputFile>
        </configuration>
      </plugin>
<!--      &lt;!&ndash; frontend build tools: https://github.com/eirslett/frontend-maven-plugin &ndash;&gt;-->
<!--      <plugin>-->
<!--        <groupId>com.github.eirslett</groupId>-->
<!--        <artifactId>frontend-maven-plugin</artifactId>-->
<!--        <version>1.12.0</version>-->
<!--        <configuration>-->
<!--          <workingDirectory>client</workingDirectory>-->
<!--          <installDirectory>.mvn-node</installDirectory>-->
<!--        </configuration>-->
<!--        <executions>-->
<!--          &lt;!&ndash; Install node and npm for usage by maven. &ndash;&gt;-->
<!--          <execution>-->
<!--            <id>install node and npm locally for maven</id>-->
<!--            <goals>-->
<!--              <goal>install-node-and-npm</goal>-->
<!--            </goals>-->
<!--            <configuration>-->
<!--              <nodeVersion>${nodejs.version}</nodeVersion>-->
<!--            </configuration>-->
<!--            <phase>prepare-package</phase>-->
<!--          </execution>-->
<!--          &lt;!&ndash; Install modules for maven's local node/npm. &ndash;&gt;-->
<!--          <execution>-->
<!--            <id>npm install</id>-->
<!--            <goals>-->
<!--              <goal>npm</goal>-->
<!--            </goals>-->
<!--            <configuration>-->
<!--              <arguments>install &#45;&#45;no-optional</arguments>-->
<!--            </configuration>-->
<!--            <phase>prepare-package</phase>-->
<!--          </execution>-->
<!--          &lt;!&ndash; Build the client. &ndash;&gt;-->
<!--          <execution>-->
<!--            <id>npm run build</id>-->
<!--            <goals>-->
<!--              <goal>npm</goal>-->
<!--            </goals>-->
<!--            <configuration>-->
<!--              <arguments>run build</arguments>-->
<!--            </configuration>-->
<!--            <phase>prepare-package</phase>-->
<!--          </execution>-->
<!--          &lt;!&ndash; Copy client dist into target for inclusion in packaging. &ndash;&gt;-->
<!--          <execution>-->
<!--            <id>npm run copy-dist</id>-->
<!--            <goals>-->
<!--              <goal>npm</goal>-->
<!--            </goals>-->
<!--            <configuration>-->
<!--              <arguments>run copy-dist &#45;&#45; ${project.build.directory}/classes/public/</arguments>-->
<!--            </configuration>-->
<!--            <phase>prepare-package</phase>-->
<!--          </execution>-->
<!--        </executions>-->
<!--      </plugin>-->
      <!-- A "clean" should also remove contents from client's build directory. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>client/build</directory>
              <includes>
                <include>**</include>
              </includes>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <!-- Create information about the source code revision into the build artifact.-->
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <version>4.0.0</version>
        <executions>
          <execution>
            <id>get-git-info</id>
            <goals>
              <goal>revision</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
          <prefix>git</prefix>
          <verbose>false</verbose>
          <generateGitPropertiesFile>true</generateGitPropertiesFile>
          <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
          <format>json</format>
          <includeOnlyProperties>
            <includeOnlyProperty>^git.build.(time|host|version)$</includeOnlyProperty>
            <includeOnlyProperty>^git.build.user.(email|name)$</includeOnlyProperty>
            <includeOnlyProperty>^git.commit.id.abbrev$</includeOnlyProperty>
            <includeOnlyProperty>^git.commit.time$</includeOnlyProperty>
          </includeOnlyProperties>
          <gitDescribe>
            <skip>false</skip>
            <always>false</always>
            <dirty>-dirty</dirty>
          </gitDescribe>
        </configuration>
      </plugin>
      <!-- Maven versions plugin to assist with managing versions of plugins, dependencies etc in this pom file.
               mvn versions:display-plugin-updates
               mvn versions:display-dependency-updates
        -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>2.8.1</version>
        <configuration>
          <generateBackupPoms>false</generateBackupPoms>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-help-plugin</artifactId>
        <version>3.2.0</version>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <!-- syspkg profile -->
    <!-- Profile that enables building a tar file for deployment at global system level. -->
    <profile>
      <id>syspkg</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>3.3.0</version>
            <configuration>
              <descriptors>
                <descriptor>src/assembly/dist.xml</descriptor>
              </descriptors>
            </configuration>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
